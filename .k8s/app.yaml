apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio-website-deployment
  labels:
    app: portfolio-website
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portfolio-website
  template:
    metadata:
      labels:
        app: portfolio-website
    spec:
      containers:
        - name: portfolio-website
          image: ${CICD_IMAGE}:latest
          ports:
            - containerPort: 80
              name: http
          resources:
            limits:
              cpu: 300m
              memory: 512mi
---
apiVersion: v1
kind: Service
metadata:
  name: portfolio-website-service
spec:
  selector:
    app: portfolio-website
  externalTrafficPolicy: Cluster
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: portfolio-website-ingress
  labels:
    app: portfolio-website
  annotations:
    certmanager.k8s.io/cluster-issuer: eldermael-certs-issuer
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
spec:
  rules:
    - host: eldermael.io
      http:
        paths:
          - backend:
              serviceName: portfolio-website-service
              servicePort: http
            path: /
  tls:
    - hosts:
        - eldermael.io
      secretName: tls-portfolio-website-ingress